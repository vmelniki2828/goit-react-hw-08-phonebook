{"version":3,"file":"static/js/842.c8f3aeae.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactElement/ContactElement.styled.js","components/ContactElement/ContactElement.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input``;\n\nexport const PhonebookTitle = styled.h1`\n  margin: 0;\n`;\n\nexport const Label = styled.label``;\n\nexport const Wrapper = styled.div`\n  padding-top: 40px;\n  width: 700px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  gap: 20px;\n  padding: 30px 0;\n`;\n\nexport const Input = styled.input`\n  width: 210px;\n  height: 20px;\n  padding-left: 10px;\n`;\n\nexport const Button = styled.button`\nborder-color: green;\n\n  background-color: ${props => (props.main ? 'green' : 'transparent')};\n  display: inline-flex;\n  width: 150px;\n  height: 35px;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  border-radius: 5px;\n  transition: all 250ms linear;\n  &:hover {\n    background-color: green;\n    border-color: transparent;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactsThunk } from 'redux/contacts/contactsOperations';\n\nimport { contactsSelector } from 'redux/selectors';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelector);\n\n  const [name, setName] = useState('');\n\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(item => item.name.toLowerCase() === name.toLowerCase())) {\n      return alert(`${name} is already in contact`);\n    }\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContactsThunk(newContact));\n\n    e.target.reset();\n  };\n\n  const saveDataFromInput = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          onChange={saveDataFromInput}\n          placeholder=\"enter name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={saveDataFromInput}\n          placeholder=\"enter phone number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button round=\"50%\" type=\"submit\">\n        Add contact\n      </Button>\n    </Form>\n  );\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 400px;\n  list-style: none;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  padding: 0;\n`;\n\nexport const ContactsTitle = styled.h2``;","import styled from \"styled-components\"\n\nexport const Item = styled.li`\ndisplay: flex;\nalign-items:center ;\njustify-content: space-between ;\n`\n\nexport const Button = styled.button`\ndisplay: block;\nwidth: 135px;\nmargin-left: auto;\ntransition: background-color 250ms linear;\noutline: none;\n&:hover{\n    background-color: red;\n    border-color: transparent;\n}\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Item } from './ContactElement.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Dna } from 'react-loader-spinner';\n\nimport { deleteContactsThunk } from 'redux/contacts/contactsOperations';\nimport { isLoadingSelector } from 'redux/selectors';\n\nexport function ContactElement({ name, number, id, elId, idChanger }) {\n\n  const isLoading = useSelector(isLoadingSelector);\n\n  const dispatch = useDispatch();\n\n  const deleteContactFromState = e => {\n    idChanger(e.target.dataset.id);\n    dispatch(deleteContactsThunk(e.target.dataset.id));\n  };\n\n  return (\n    <Item>\n      {name}: {number}\n      {isLoading && elId === id ? (\n        <Dna height=\"40\" width=\"80\" />\n      ) : (\n        <Button onClick={deleteContactFromState} data-id={id}>\n          Delete contact\n        </Button>\n      )}\n    </Item>\n  );\n}\n\nContactElement.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  elId: PropTypes.string.isRequired,\n  idChanger: PropTypes.func.isRequired,\n};","import React, { useState } from 'react';\n\nimport { ContactsTitle, List } from './ContactList.styled';\nimport { ContactElement } from '../ContactElement/ContactElement';\nimport { useSelector } from 'react-redux';\nimport { filteredContactsSelector } from 'redux/selectors';\n\nexport function ContactList() {\n  const [elId, setElId] = useState('');\n\n  const idChanger = id => {\n    setElId(id);\n  };\n\n  const contacts = useSelector(filteredContactsSelector);\n  return (\n    <>\n      <ContactsTitle>Contacts</ContactsTitle>\n      <List>\n        {contacts.map(item => (\n          <ContactElement\n            elId={elId}\n            idChanger={idChanger}\n            id={item.id}\n            key={item.id}\n            name={item.name}\n            number={item.number}\n          />\n        ))}\n      </List>\n    </>\n  );\n}","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  gap: 20px;\n`;\nexport const Input = styled.input`\n  height: 20px;\n`;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterChange } from 'redux/filterSlice';\nimport { filterSelector } from 'redux/selectors';\nimport { Label } from './Filter.styled';\nimport { Input } from './Filter.styled';\n\nexport function Filter() {\n  const filter = useSelector(filterSelector);\n  const dispatch = useDispatch();\n  const saveDataFromInput = e => {\n    const { value } = e.target;\n    dispatch(filterChange(value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        name=\"filter\"\n        value={filter}\n        onChange={saveDataFromInput}\n        type=\"text\"\n      />\n    </Label>\n  );\n}","import { PhonebookTitle, Wrapper } from 'components/App/App.styled';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAllContactsThunk } from 'redux/contacts/contactsOperations';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <PhonebookTitle>Phonebook</PhonebookTitle>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Wrapper>\n  );\n}"],"names":["PhonebookTitle","styled","Wrapper","Form","Input","Button","props","main","Label","ContactForm","dispatch","useDispatch","contacts","useSelector","contactsSelector","useState","name","setName","number","setNumber","saveDataFromInput","e","target","value","onSubmit","preventDefault","some","item","toLowerCase","alert","newContact","addContactsThunk","reset","onChange","placeholder","type","pattern","title","required","round","List","ContactsTitle","Item","ContactElement","id","elId","idChanger","isLoading","isLoadingSelector","height","width","onClick","dataset","deleteContactsThunk","ContactList","setElId","filteredContactsSelector","map","Filter","filter","filterSelector","filterChange","ContactsPage","useEffect","getAllContactsThunk"],"sourceRoot":""}